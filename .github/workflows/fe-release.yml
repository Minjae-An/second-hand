name: FE codedeploy

# release 브런치에 push가 되면 아래의 flow가 실행됩니다. cicde test
on:
  push:
    branches: [ "release-fe" ]
   
# flow에서 사용할 변수 같은 느낌입니다.
env:
  working-directory: ./fe 
  
permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest


    steps:

    # 1) 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3
    
    # 2) node 셋팅
    - name: Set node@v1
      uses: actions/setup-node@v3
      
    - name: check Node v
      run: node -v
    
    - name: Install npm
      run: sudo apt install npm

    - name: check npm
      run: npm -v

    - name: install dependency
      run: npm install
      working-directory: ${{ env.working-directory }}

    - name: install CI
      run: npm ci
      working-directory: ${{ env.working-directory }}
    
    - name: Generate build
      run: npm run build
      working-directory: ${{ env.working-directory }}

    - name: check current directory
      run: ls
    

    - name: docker build and push
      run: |
        sudo docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        sudo docker build --platform amd64 --build-arg DEPENDENCY=build/dependency -f ./Dockerfile -t ${{secrets.DOCKER_USERNAME}}/birdieweb .
        sudo docker push ${{ secrets.DOCKER_USERNAME }}/birdieweb

    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          sudo docker rm -f ${{ secrets.DOCKER_USERNAME }}/birdieweb
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/birdieweb 
          sudo docker ps -a
          sudo docker run -d --rm --name birdiehyun/birdieweb -p 80:80 birdiehyun/birdieweb